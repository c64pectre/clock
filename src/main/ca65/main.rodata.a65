;    clock: Clock application for the Commodore 64.
;    Copyright (C) 2022  C64PECTRE
;
;    This program is free software: you can redistribute it and/or modify
;    it under the terms of the GNU General Public License as published by
;    the Free Software Foundation, either version 3 of the License, or
;    (at your option) any later version.
;
;    This program is distributed in the hope that it will be useful,
;    but WITHOUT ANY WARRANTY; without even the implied warranty of
;    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;    GNU General Public License for more details.
;
;    You should have received a copy of the GNU General Public License
;    along with this program.  If not, see https://www.gnu.org/licenses/.
;
;    Contact: https://github.com/c64pectre/clock/ create an issue

HDT = HOR  ; Horizontal dot
VDT = VER  ; Vertical dot
RBS = DOT  ; Radio Button Set
RBC = CIR  ; Radio Button Clear

INIT_MAIN_SCREEN:
    .byte PETSCII_ENABLE_CBM_SHIFT , PETSCII_UNSHIFTED_MODE , PETSCII_DISABLE_CBM_SHIFT , CONFIG_TEXT_COLOR , PETSCII_CLR , PETSCII_NUL

MAIN_SCREEN:
    ;                                                                   1                                                           2                                                           3
    ;       0     1     2     3     4     5     6     7     8     9     0     1     2     3     4     5     6     7     8     9     0     1     2     3     4     5     6     7     8     9     0     1     2     3     4     5     6     7     8     9
    ;           H_                            _H                                        M_                            _M                                        S_                            _S                            T
    ;           =====================         =====================          :          =====================         =====================          :          =====================         =====================    ,    =====================
    .byte  NW , HOR , LSB , RBS , R_C , C_L , C_O , C_C , C_K , SPC , RBC , R_A , C_L , C_A , C_R , C_M , RSB , HOR , LSB , R_C , C_O , C_L , C_O , C_R , RSB , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR ,  NE
    .byte VER , SPC , HDT , HDT , SPC , SPC , SPC , HDT , HDT , SPC , SPC , SPC , SPC , SPC , HDT , HDT , SPC , SPC , SPC , HDT , HDT , SPC , SPC , SPC , SPC , SPC , HDT , HDT , SPC , SPC , SPC , HDT , HDT , SPC , SPC , SPC , SPC , SPC , SPC , VER
    .byte VER , VDT , SPC , SPC , VDT , SPC , VDT , SPC , SPC , VDT , SPC , SPC , SPC , VDT , SPC , SPC , VDT , SPC , VDT , SPC , SPC , VDT , SPC , SPC , SPC , VDT , SPC , SPC , VDT , SPC , VDT , SPC , SPC , VDT , SPC , SPC , SPC , SPC , SPC , VER
    .byte VER , VDT , SPC , SPC , VDT , SPC , VDT , SPC , SPC , VDT , SPC , VDT , SPC , VDT , SPC , SPC , VDT , SPC , VDT , SPC , SPC , VDT , SPC , VDT , SPC , VDT , SPC , SPC , VDT , SPC , VDT , SPC , SPC , VDT , SPC , SPC , SPC , SPC , SPC , VER
    .byte VER , SPC , HDT , HDT , SPC , SPC , SPC , HDT , HDT , SPC , SPC , SPC , SPC , SPC , HDT , HDT , SPC , SPC , SPC , HDT , HDT , SPC , SPC , SPC , SPC , SPC , HDT , HDT , SPC , SPC , SPC , HDT , HDT , SPC , SPC , SPC , SPC , SPC , SPC , VER
    .byte VER , VDT , SPC , SPC , VDT , SPC , VDT , SPC , SPC , VDT , SPC , VDT , SPC , VDT , SPC , SPC , VDT , SPC , VDT , SPC , SPC , VDT , SPC , VDT , SPC , VDT , SPC , SPC , VDT , SPC , VDT , SPC , SPC , VDT , SPC , SPC , SPC , SPC , SPC , VER
    .byte VER , VDT , SPC , SPC , VDT , SPC , VDT , SPC , SPC , VDT , SPC , SPC , SPC , VDT , SPC , SPC , VDT , SPC , VDT , SPC , SPC , VDT , SPC , SPC , SPC , VDT , SPC , SPC , VDT , SPC , VDT , SPC , SPC , VDT , SPC , SPC , SPC , SPC , SPC , VER
    .byte VER , SPC , HDT , HDT , SPC , SPC , SPC , HDT , HDT , SPC , SPC , SPC , SPC , SPC , HDT , HDT , SPC , SPC , SPC , HDT , HDT , SPC , SPC , SPC , SPC , SPC , HDT , HDT , SPC , SPC , SPC , HDT , HDT , SPC , SPC , SPC , SPC , SPC , SPC , VER
    .byte  SW , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR ,  SE
    .byte SPC , LSB , R_F , R_1 , PLS , RSB , LSB , R_F , R_2 , MIN , RSB , SPC , SPC , LSB , R_F , R_3 , PLS , RSB , LSB , R_F , R_4 , MIN , RSB , SPC , SPC , LSB , R_F , R_5 , PLS , RSB , LSB , R_F , R_6 , MIN , RSB , SPC , SPC , SPC , SPC , SPC
    .byte SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC
    .byte SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC
    .byte  NW , HOR , LSB , RBS , C_S , C_T , C_O , C_P , R_W , C_A , C_T , C_C , C_H , SPC , RBC , C_T , C_I , R_M , C_E , C_R , RSB , HOR , LSB , C_C , C_O , R_L , C_O , C_R , RSB , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR ,  NE
    .byte VER , SPC , HDT , HDT , SPC , SPC , SPC , HDT , HDT , SPC , SPC , SPC , SPC , SPC , HDT , HDT , SPC , SPC , SPC , HDT , HDT , SPC , SPC , SPC , SPC , SPC , HDT , HDT , SPC , SPC , SPC , HDT , HDT , SPC , SPC , SPC , HDT , HDT , SPC , VER
    .byte VER , VDT , SPC , SPC , VDT , SPC , VDT , SPC , SPC , VDT , SPC , SPC , SPC , VDT , SPC , SPC , VDT , SPC , VDT , SPC , SPC , VDT , SPC , SPC , SPC , VDT , SPC , SPC , VDT , SPC , VDT , SPC , SPC , VDT , SPC , VDT , SPC , SPC , VDT , VER
    .byte VER , VDT , SPC , SPC , VDT , SPC , VDT , SPC , SPC , VDT , SPC , VDT , SPC , VDT , SPC , SPC , VDT , SPC , VDT , SPC , SPC , VDT , SPC , VDT , SPC , VDT , SPC , SPC , VDT , SPC , VDT , SPC , SPC , VDT , SPC , VDT , SPC , SPC , VDT , VER
    .byte VER , SPC , HDT , HDT , SPC , SPC , SPC , HDT , HDT , SPC , SPC , SPC , SPC , SPC , HDT , HDT , SPC , SPC , SPC , HDT , HDT , SPC , SPC , SPC , SPC , SPC , HDT , HDT , SPC , SPC , SPC , HDT , HDT , SPC , SPC , SPC , HDT , HDT , SPC , VER
    .byte VER , VDT , SPC , SPC , VDT , SPC , VDT , SPC , SPC , VDT , SPC , VDT , SPC , VDT , SPC , SPC , VDT , SPC , VDT , SPC , SPC , VDT , SPC , VDT , SPC , VDT , SPC , SPC , VDT , SPC , VDT , SPC , SPC , VDT , SPC , VDT , SPC , SPC , VDT , VER
    .byte VER , VDT , SPC , SPC , VDT , SPC , VDT , SPC , SPC , VDT , SPC , SPC , SPC , VDT , SPC , SPC , VDT , SPC , VDT , SPC , SPC , VDT , SPC , SPC , SPC , VDT , SPC , SPC , VDT , SPC , VDT , SPC , SPC , VDT , SPC , VDT , SPC , SPC , VDT , VER
    .byte VER , SPC , HDT , HDT , SPC , SPC , SPC , HDT , HDT , SPC , SPC , SPC , SPC , SPC , HDT , HDT , SPC , SPC , SPC , HDT , HDT , SPC , SPC , SPC , SPC , SPC , HDT , HDT , SPC , SPC , SPC , HDT , HDT , SPC , VDT , SPC , HDT , HDT , SPC , VER
    .byte  SW , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR , HOR ,  SE
    .byte SPC , LSB , RBS , C_S , R_T , C_A , C_R , C_T , SPC , RBC , C_S , C_T , C_O , R_P , SPC , RBC , R_R , C_E , C_S , C_E , C_T , RSB , SPC , LSB , R_L , C_A , C_P , RSB , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC
    .byte SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC
    .byte SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC , SPC
   ;.byte C_D , C_E , C_B , C_U , C_G , SPC , C_C , C_I , C_A , C_1 , SPC , MIN , MIN , PER , MIN , MIN , PER , MIN , MIN , PER , MIN , MIN , SPC , C_C , C_I , C_A , C_2 , SPC , MIN , MIN , PER , MIN , MIN , PER , MIN , MIN , PER , MIN , MIN , SPC
    .byte C_C , C_O , C_P , C_Y , C_R , C_I , C_G , C_H , C_T , SPC , LPA , C_C , RPA , SPC , C_2 , C_0 , C_2 , C_2 , SPC , C_C , C_6 , C_4 , C_P , C_E , C_C , C_T , C_R , C_E , SPC , C_G , C_P , C_L , C_3 , PLS , SPC , C_E , R_X , C_I , C_T , SPC

MAP_DISPLAY_ID_TO_START_LO:
    ;        [0]               [1]
    .lobytes DISPLAY_0_START , DISPLAY_1_START

MAP_DISPLAY_ID_TO_START_HI:
    ;        [0]               [1]
    .hibytes DISPLAY_0_START , DISPLAY_1_START

DISPLAY_DIGIT_INCREMENTEL_OFFSET_REVERSED:
    ;     [0] , [1] , [2] , [3] , [4] , [5] , [6]
    .byte 0   , 5   , 5   , 7   , 5   , 7   , 5

; A Seven-Segment Display (SSD) consists of 7 segments labled a thtough g:
;   a1 a2
; f1     b1
; f2     b2
;   g1 g2
; e1     c1
; e2     c2
;   d1 d2
;
; We now measure the offset from the upper left corner:
OFFSET_SSD_SEGMENT_1:
    ;     [0] [1]  [2]   [3]   [4]   [5]   [6]
    ;     g1    f1   e1    d1    c1    b1   a1
    .byte 121 , 40 , 160 , 241 , 163 , 43 , 1

OFFSET_SSD_SEGMENT_2:
    ;     [0] [1]  [2]   [3]   [4]   [5]   [6]
    ;     g1    f1   e1    d1    c1    b1   a1
    .byte 122 , 80 , 200 , 242 , 203 , 83 , 2

; Now we map the digits 0..9 to the segments lit, where each segment is represented by a bit
; position from 6..0, reversed, because then we can use lsr:
MAP_DIGIT_TO_SEGMENTS:
    ;       gfedcba
    .byte %00111111  ; 0
    .byte %00000110  ; 1
    .byte %01011011  ; 2
    .byte %01001111  ; 3
    .byte %01100110  ; 4
    .byte %01101101  ; 5
    .byte %01111101  ; 6
    .byte %00100111  ; 7
    .byte %01111111  ; 8
    .byte %01101111  ; 9

TOD_PART_MAX:
    ;     [0]   [1]               [2]               [3]
    .byte 0   , CIA_TOD_MAX_SEC , CIA_TOD_MAX_MIN , CIA_TOD_MAX_HR_24

TOD_PART_MIN:
    ;     [0]   [1]               [2]               [3]
    .byte 0   , CIA_TOD_MIN_SEC , CIA_TOD_MIN_MIN , CIA_TOD_MIN_HR_24

COMMAND_KEY_ARRAY:
    .byte PETSCII_F1              ; [0]
    .byte PETSCII_F3              ; [1]
    .byte PETSCII_F5              ; [2]
    .byte PETSCII_F2              ; [3]
    .byte PETSCII_F4              ; [4]
    .byte PETSCII_F6              ; [5]
    .byte PETSCII_LATIN_LETTER_X  ; [6]
    .byte PETSCII_NUL             ; [7]

COMMAND_HANDLER_LO:
    .lobytes hour_inc                ; [0]
    .lobytes minute_inc              ; [1]
    .lobytes second_inc              ; [2]
    .lobytes hour_dec                ; [3]
    .lobytes minute_dec              ; [4]
    .lobytes second_dec              ; [5]
    .lobytes exit                    ; [6]
    .lobytes idle                    ; [7]

COMMAND_HANDLER_HI:
    .hibytes hour_inc                ; [0]
    .hibytes minute_inc              ; [1]
    .hibytes second_inc              ; [2]
    .hibytes hour_dec                ; [3]
    .hibytes minute_dec              ; [4]
    .hibytes second_dec              ; [5]
    .hibytes exit                    ; [6]
    .hibytes idle                    ; [7]
